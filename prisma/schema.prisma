// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}



model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  hashedPassword String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now()) @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// คำสั่งสร้างฐานข้อมูล
// npx prisma migrate dev --name create_user_model
// # เข้าไปที่โฟลเดอร์โปรเจค
// cd C:\Users\Osl3yMz\Desktop\NN_clintun\my-app

// # อัพเดทฐานข้อมูล
// npx prisma db push

// # สร้าง Prisma Client ใหม่
// npx prisma generate

// # เปิด Prisma Studio เพื่อดูข้อมูล
// npx prisma studio

// ต้องรัน npx prisma generate ทุกครั้งที่แก้ไข schema
// การเปลี่ยน Role ต้องอัพเดทฐานข้อมูลด้วย npx prisma db push
// ควรเข้ารหัสรหัสผ่านก่อนบันทึกลงฐานข้อมูล
// ใช้ดัชนี email เพื่อเพิ่มประสิทธิภาพการค้นหา


// database